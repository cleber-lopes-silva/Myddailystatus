{"version":3,"file":"static/webpack/static\\development\\pages\\app.js.65d650a048340e400089.hot-update.js","sources":["webpack:///./pages/app.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\nimport { distance } from '../lib/geo'\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) {\r\n      router.push('/')\r\n    } else if (props.forceCreate) {\r\n      router.push('./create-status')\r\n    }\r\n  })\r\n  if (!props.isAuth || props.forceCreate) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Status próximos a você:</h1>\r\n      <table>\r\n        {props.checkins.map(checkin => {\r\n          return (\r\n            <tr>\r\n              <td>{checkin.id}</td>\r\n              <td>{checkin.status}</td>\r\n              <td>{JSON.stringify(checkin.coords)}</td>\r\n              <td>{checkin.distance}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    const today = new Date()\r\n    const currentDate =\r\n      today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n    const todaysCheckin = await db\r\n      .collection('markers')\r\n      .doc(currentDate)\r\n      .collection('checks')\r\n      .doc(session.user.sub)\r\n      .get()\r\n    const todaysData = todaysCheckin.data()\r\n    console.log(todaysData.coordinates)\r\n    let forceCreate = true\r\n    if (todaysData) {\r\n      // pode ver os outros checkins\r\n      forceCreate = false\r\n      const checkins = await db\r\n        .collection('markers')\r\n        .doc(currentDate)\r\n        .collection('checks')\r\n        .near({\r\n          center: todaysData.coordinates,\r\n          radius: 1000\r\n        })\r\n        .get()\r\n      const checkinsList = []\r\n      checkins.docs.forEach(doc => {\r\n        checkinsList.push({\r\n          id: doc.id,\r\n          status: doc.data().status,\r\n          coords: {\r\n            lat: doc.data().coordinates.latitude,\r\n            long: doc.data().coordinates.longitude\r\n          },\r\n          distance: distance(\r\n            todaysData.coordinates.latitude,\r\n            todaysData.coordinates.longitude,\r\n            doc.data().coordinates.latitude,\r\n            doc.data().coordinates.longitude\r\n          )\r\n        })\r\n      })\r\n      return {\r\n        props: {\r\n          isAuth: true,\r\n          user: session.user,\r\n          forceCreate: false,\r\n          checkins: checkinsList\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      props: {\r\n        isAuth: true,\r\n        user: session.user,\r\n        forceCreate\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      isAuth: false,\r\n      user: {}\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;;AAAA;;;;A","sourceRoot":""}