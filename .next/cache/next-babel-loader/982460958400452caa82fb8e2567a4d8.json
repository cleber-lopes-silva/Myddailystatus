{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clebe\\\\Mydaily_cleber\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('./create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"app\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, checkin.id), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, JSON.stringify(checkin.coords)));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    console.log(todaysData.coordinates);\n    let forceCreate = true;\n\n    if (todaysData) {\n      // pode ver os outros checkins\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          }\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/clebe/Mydaily_cleber/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","console","log","coordinates","near","center","radius","checkinsList","docs","forEach","lat","latitude","long","longitude"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = props => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) {\r\n      router.push('/')\r\n    } else if (props.forceCreate) {\r\n      router.push('./create-status')\r\n    }\r\n  })\r\n  if (!props.isAuth || props.forceCreate) {\r\n    return null\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>app</h1>\r\n      <table>\r\n        {props.checkins.map(checkin => {\r\n          return (\r\n          <tr>\r\n              <td>{checkin.id}</td>\r\n              <td>{checkin.status}</td>\r\n              <td>{JSON.stringify(checkin.coords)}</td>\r\n          </tr>\r\n          )\r\n        })}\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\nexport default App\r\n\r\nexport async function getServerSideProps ({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  if (session) {\r\n    const today = new Date()\r\n    const currentDate =\r\n      today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n    const todaysCheckin = await db\r\n      .collection('markers')\r\n      .doc(currentDate)\r\n      .collection('checks')\r\n      .doc(session.user.sub)\r\n      .get()\r\n    const todaysData = todaysCheckin.data()\r\n    console.log(todaysData.coordinates)\r\n    let forceCreate = true\r\n    if (todaysData) {\r\n      // pode ver os outros checkins\r\n      forceCreate = false\r\n      const checkins = await db\r\n        .collection('markers')\r\n        .doc(currentDate)\r\n        .collection('checks')\r\n        .near({\r\n          center: todaysData.coordinates,\r\n          radius: 1000\r\n        })\r\n        .get()\r\n      const checkinsList = []\r\n      checkins.docs.forEach(doc => {\r\n        checkinsList.push({\r\n          id: doc.id,\r\n          status: doc.data().status,\r\n              coords: {\r\n                  lat: doc.data().coordinates.latitude,\r\n                  long: doc.data().coordinates.longitude \r\n          }\r\n        })\r\n      })\r\n      return {\r\n        props: {\r\n          isAuth: true,\r\n          user: session.user,\r\n          forceCreate: false,\r\n          checkins: checkinsList\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      props: {\r\n        isAuth: true,\r\n        user: session.user,\r\n        forceCreate\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    props: {\r\n      isAuth: false,\r\n      user: {}\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}